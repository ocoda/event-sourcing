version: 2

aliases:
  - &restore-cache
    restore_cache:
        key: pnpm-packages-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pnpm-lock.yaml" }}
  - &install-pnpm
    run:
      name: Install pnpm package manager
      command: npm install -g pnpm
  - &install-deps
    run:
        name: Install dependencies
        command: pnpm install
  - &save-cache
    save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
  - &build-packages
    run:
        name: Build
        command: npm run build

jobs:
  build:
    working_directory: ~/ocoda
    docker:
      - image: node:21
    steps:
      - checkout
      - *restore-cache
      - *install-pnpm
      - *install-deps
      - *save-cache
      - run:
          name: Build
          command: pnpm build

  test:
    working_directory: ~/ocoda
    machine: true
    steps:
      - checkout
      - run: 
          name: Prepare nvm
          command: |
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: 
          name: Upgrade Node.js
          command: |
            nvm install v18
            node -v
            nvm alias default v18
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - *restore-cache
      - *install-pnpm
      - *install-deps
      - *save-cache
      - run:
          name: Prepare
          command: |
            docker-compose up -d
            sleep 10
      - run:
          name: List containers
          command: docker ps
      - run:
          name: linting and formatting
          command: pnpm run ci
      - run:
          name: test
          command: pnpm test:ci
      - run:
          name: Upload coverage reports to Codecov
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            ./codecov -t ${CODECOV_TOKEN}

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
